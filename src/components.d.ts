/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import {
  Item,
} from './entities/item.entity';

import {
  BasketOverviewComponent as DemoBasketOverview
} from './components/basket-overview/basket-overview';

declare global {
  interface HTMLDemoBasketOverviewElement extends DemoBasketOverview, HTMLElement {
  }
  var HTMLDemoBasketOverviewElement: {
    prototype: HTMLDemoBasketOverviewElement;
    new (): HTMLDemoBasketOverviewElement;
  };
  interface HTMLElementTagNameMap {
    "demo-basket-overview": HTMLDemoBasketOverviewElement;
  }
  interface ElementTagNameMap {
    "demo-basket-overview": HTMLDemoBasketOverviewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "demo-basket-overview": JSXElements.DemoBasketOverviewAttributes;
    }
  }
  namespace JSXElements {
    export interface DemoBasketOverviewAttributes extends HTMLAttributes {
      nrOfElements?: number;
      totalPrice?: string;
    }
  }
}


import {
  CardComponent as DemoCard
} from './components/card/card';

declare global {
  interface HTMLDemoCardElement extends DemoCard, HTMLElement {
  }
  var HTMLDemoCardElement: {
    prototype: HTMLDemoCardElement;
    new (): HTMLDemoCardElement;
  };
  interface HTMLElementTagNameMap {
    "demo-card": HTMLDemoCardElement;
  }
  interface ElementTagNameMap {
    "demo-card": HTMLDemoCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "demo-card": JSXElements.DemoCardAttributes;
    }
  }
  namespace JSXElements {
    export interface DemoCardAttributes extends HTMLAttributes {
      item?: Item;
    }
  }
}


import {
  DiscountsComponent as DemoDiscounts
} from './components/discounts/discounts';

declare global {
  interface HTMLDemoDiscountsElement extends DemoDiscounts, HTMLElement {
  }
  var HTMLDemoDiscountsElement: {
    prototype: HTMLDemoDiscountsElement;
    new (): HTMLDemoDiscountsElement;
  };
  interface HTMLElementTagNameMap {
    "demo-discounts": HTMLDemoDiscountsElement;
  }
  interface ElementTagNameMap {
    "demo-discounts": HTMLDemoDiscountsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "demo-discounts": JSXElements.DemoDiscountsAttributes;
    }
  }
  namespace JSXElements {
    export interface DemoDiscountsAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  ItemBasketComponent as DemoItemBasket
} from './components/item-basket/item-basket';

declare global {
  interface HTMLDemoItemBasketElement extends DemoItemBasket, HTMLElement {
  }
  var HTMLDemoItemBasketElement: {
    prototype: HTMLDemoItemBasketElement;
    new (): HTMLDemoItemBasketElement;
  };
  interface HTMLElementTagNameMap {
    "demo-item-basket": HTMLDemoItemBasketElement;
  }
  interface ElementTagNameMap {
    "demo-item-basket": HTMLDemoItemBasketElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "demo-item-basket": JSXElements.DemoItemBasketAttributes;
    }
  }
  namespace JSXElements {
    export interface DemoItemBasketAttributes extends HTMLAttributes {
      items?: Item[];
    }
  }
}


import {
  ItemFilterComponent as DemoItemFilter
} from './components/item-filter/item-filter';

declare global {
  interface HTMLDemoItemFilterElement extends DemoItemFilter, HTMLElement {
  }
  var HTMLDemoItemFilterElement: {
    prototype: HTMLDemoItemFilterElement;
    new (): HTMLDemoItemFilterElement;
  };
  interface HTMLElementTagNameMap {
    "demo-item-filter": HTMLDemoItemFilterElement;
  }
  interface ElementTagNameMap {
    "demo-item-filter": HTMLDemoItemFilterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "demo-item-filter": JSXElements.DemoItemFilterAttributes;
    }
  }
  namespace JSXElements {
    export interface DemoItemFilterAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  ItemOverviewComponent as DemoItemOverview
} from './components/item-overview/item-overview';

declare global {
  interface HTMLDemoItemOverviewElement extends DemoItemOverview, HTMLElement {
  }
  var HTMLDemoItemOverviewElement: {
    prototype: HTMLDemoItemOverviewElement;
    new (): HTMLDemoItemOverviewElement;
  };
  interface HTMLElementTagNameMap {
    "demo-item-overview": HTMLDemoItemOverviewElement;
  }
  interface ElementTagNameMap {
    "demo-item-overview": HTMLDemoItemOverviewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "demo-item-overview": JSXElements.DemoItemOverviewAttributes;
    }
  }
  namespace JSXElements {
    export interface DemoItemOverviewAttributes extends HTMLAttributes {
      items?: Item[];
    }
  }
}


import {
  AboutComponent as DemoAbout
} from './containers/about/about';

declare global {
  interface HTMLDemoAboutElement extends DemoAbout, HTMLElement {
  }
  var HTMLDemoAboutElement: {
    prototype: HTMLDemoAboutElement;
    new (): HTMLDemoAboutElement;
  };
  interface HTMLElementTagNameMap {
    "demo-about": HTMLDemoAboutElement;
  }
  interface ElementTagNameMap {
    "demo-about": HTMLDemoAboutElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "demo-about": JSXElements.DemoAboutAttributes;
    }
  }
  namespace JSXElements {
    export interface DemoAboutAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  MyApp as DemoApp
} from './containers/my-app/my-app';

declare global {
  interface HTMLDemoAppElement extends DemoApp, HTMLElement {
  }
  var HTMLDemoAppElement: {
    prototype: HTMLDemoAppElement;
    new (): HTMLDemoAppElement;
  };
  interface HTMLElementTagNameMap {
    "demo-app": HTMLDemoAppElement;
  }
  interface ElementTagNameMap {
    "demo-app": HTMLDemoAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "demo-app": JSXElements.DemoAppAttributes;
    }
  }
  namespace JSXElements {
    export interface DemoAppAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  ShoppingListOverview as DemoShoppingListOverview
} from './containers/shopping-list-overview/shopping-list-overview';

declare global {
  interface HTMLDemoShoppingListOverviewElement extends DemoShoppingListOverview, HTMLElement {
  }
  var HTMLDemoShoppingListOverviewElement: {
    prototype: HTMLDemoShoppingListOverviewElement;
    new (): HTMLDemoShoppingListOverviewElement;
  };
  interface HTMLElementTagNameMap {
    "demo-shopping-list-overview": HTMLDemoShoppingListOverviewElement;
  }
  interface ElementTagNameMap {
    "demo-shopping-list-overview": HTMLDemoShoppingListOverviewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "demo-shopping-list-overview": JSXElements.DemoShoppingListOverviewAttributes;
    }
  }
  namespace JSXElements {
    export interface DemoShoppingListOverviewAttributes extends HTMLAttributes {
      
    }
  }
}

