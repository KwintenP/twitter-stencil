/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import {
  Item,
} from './entities/item.entity';

import {
  BasketOverviewComponent as BasketOverview
} from './components/basket-overview/basket-overview';

declare global {
  interface HTMLBasketOverviewElement extends BasketOverview, HTMLElement {
  }
  var HTMLBasketOverviewElement: {
    prototype: HTMLBasketOverviewElement;
    new (): HTMLBasketOverviewElement;
  };
  interface HTMLElementTagNameMap {
    "basket-overview": HTMLBasketOverviewElement;
  }
  interface ElementTagNameMap {
    "basket-overview": HTMLBasketOverviewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "basket-overview": JSXElements.BasketOverviewAttributes;
    }
  }
  namespace JSXElements {
    export interface BasketOverviewAttributes extends HTMLAttributes {
      nrOfElements?: number;
      totalPrice?: string;
    }
  }
}


import {
  CardComponent as MyCard
} from './components/card/card';

declare global {
  interface HTMLMyCardElement extends MyCard, HTMLElement {
  }
  var HTMLMyCardElement: {
    prototype: HTMLMyCardElement;
    new (): HTMLMyCardElement;
  };
  interface HTMLElementTagNameMap {
    "my-card": HTMLMyCardElement;
  }
  interface ElementTagNameMap {
    "my-card": HTMLMyCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-card": JSXElements.MyCardAttributes;
    }
  }
  namespace JSXElements {
    export interface MyCardAttributes extends HTMLAttributes {
      item?: Item;
    }
  }
}


import {
  DiscountsComponent as MyDiscounts
} from './components/discounts/discounts';

declare global {
  interface HTMLMyDiscountsElement extends MyDiscounts, HTMLElement {
  }
  var HTMLMyDiscountsElement: {
    prototype: HTMLMyDiscountsElement;
    new (): HTMLMyDiscountsElement;
  };
  interface HTMLElementTagNameMap {
    "my-discounts": HTMLMyDiscountsElement;
  }
  interface ElementTagNameMap {
    "my-discounts": HTMLMyDiscountsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-discounts": JSXElements.MyDiscountsAttributes;
    }
  }
  namespace JSXElements {
    export interface MyDiscountsAttributes extends HTMLAttributes {

    }
  }
}


import {
  ItemBasketComponent as ItemBasket
} from './components/item-basket/item-basket';

declare global {
  interface HTMLItemBasketElement extends ItemBasket, HTMLElement {
  }
  var HTMLItemBasketElement: {
    prototype: HTMLItemBasketElement;
    new (): HTMLItemBasketElement;
  };
  interface HTMLElementTagNameMap {
    "item-basket": HTMLItemBasketElement;
  }
  interface ElementTagNameMap {
    "item-basket": HTMLItemBasketElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "item-basket": JSXElements.ItemBasketAttributes;
    }
  }
  namespace JSXElements {
    export interface ItemBasketAttributes extends HTMLAttributes {
      items?: Item[];
    }
  }
}


import {
  ItemFilterComponent as ItemFilter
} from './components/item-filter/item-filter';

declare global {
  interface HTMLItemFilterElement extends ItemFilter, HTMLElement {
  }
  var HTMLItemFilterElement: {
    prototype: HTMLItemFilterElement;
    new (): HTMLItemFilterElement;
  };
  interface HTMLElementTagNameMap {
    "item-filter": HTMLItemFilterElement;
  }
  interface ElementTagNameMap {
    "item-filter": HTMLItemFilterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "item-filter": JSXElements.ItemFilterAttributes;
    }
  }
  namespace JSXElements {
    export interface ItemFilterAttributes extends HTMLAttributes {

    }
  }
}


import {
  ItemOverviewComponent as ItemOverview
} from './components/item-overview/item-overview';

declare global {
  interface HTMLItemOverviewElement extends ItemOverview, HTMLElement {
  }
  var HTMLItemOverviewElement: {
    prototype: HTMLItemOverviewElement;
    new (): HTMLItemOverviewElement;
  };
  interface HTMLElementTagNameMap {
    "item-overview": HTMLItemOverviewElement;
  }
  interface ElementTagNameMap {
    "item-overview": HTMLItemOverviewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "item-overview": JSXElements.ItemOverviewAttributes;
    }
  }
  namespace JSXElements {
    export interface ItemOverviewAttributes extends HTMLAttributes {
      items?: Item[];
    }
  }
}


import {
  MyApp as MyApp
} from './containers/my-app/my-app';

declare global {
  interface HTMLMyAppElement extends MyApp, HTMLElement {
  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-app": JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {

    }
  }
}


import {
  AboutComponent as AboutWebshop
} from './containers/about/about';

declare global {
  interface HTMLAboutWebshopElement extends AboutWebshop, HTMLElement {
  }
  var HTMLAboutWebshopElement: {
    prototype: HTMLAboutWebshopElement;
    new (): HTMLAboutWebshopElement;
  };
  interface HTMLElementTagNameMap {
    "about-webshop": HTMLAboutWebshopElement;
  }
  interface ElementTagNameMap {
    "about-webshop": HTMLAboutWebshopElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "about-webshop": JSXElements.AboutWebshopAttributes;
    }
  }
  namespace JSXElements {
    export interface AboutWebshopAttributes extends HTMLAttributes {

    }
  }
}


import {
  ShoppingListOverview as ShoppingListOverview
} from './containers/shopping-list-overview/shopping-list-overview';

declare global {
  interface HTMLShoppingListOverviewElement extends ShoppingListOverview, HTMLElement {
  }
  var HTMLShoppingListOverviewElement: {
    prototype: HTMLShoppingListOverviewElement;
    new (): HTMLShoppingListOverviewElement;
  };
  interface HTMLElementTagNameMap {
    "shopping-list-overview": HTMLShoppingListOverviewElement;
  }
  interface ElementTagNameMap {
    "shopping-list-overview": HTMLShoppingListOverviewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "shopping-list-overview": JSXElements.ShoppingListOverviewAttributes;
    }
  }
  namespace JSXElements {
    export interface ShoppingListOverviewAttributes extends HTMLAttributes {

    }
  }
}

